# 动态类型

# 在python中，类型实在运行时自动决定的，而不是通过代码声明。
# 这意味着没有必要事先声明变量（只要记住，这个概念实质上对变量、对象和它们之间的关系都适用）
# 变量永远不会拥有任何和它关联的类型信息或约束。类型的概念存在与对象而不是变量名中
# 所有的变量必须在使用前被明确的赋值、使用未赋值的变量会产生错误。
# 变量总是连接到对象，并且绝不会链接到其他变量上，但是更大的对象可能链接到其他的对象
# （例如，一个列表对象能够连接到它所包含的对象）
# 变量事实上是到对象内存空间上的一个指针

# 变量是一个系统表的入口，包含了指向对象的链接。
# 对象是被分配到的一块内存，有足够的空间取表示它们所代表的值。
# 引用时自动形成的从变量到对象的指针

# 对象的垃圾收集
# 在python中，每当一个变量名被赋予一个新的对象，如果原来的对象没有被其他的变量名或对象所引用的话，
# 那么之前的那个对象占用的空间就会被回收

# python在每个对象中保留了一个计数器，计数器记录当前指向该对象的引用的数目。
# 一旦这个计数器被设置位零，这个对象的内存空间就会自动回收， 只适用于Cpython（标准python）

# 要了解python的循环检测器的更多细节，参见python库手册中的gc模块的文档

import sys
print(sys.getrefcount(1))  # 查询一个对象引用的次数